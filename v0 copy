# shellcheck shell=sh disable=SC2039,SC2142

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

alias param='{ eval "$(_param_main "$@")"; }'

xrc dict/v0

PARAM_AWK_PATH="$(xrc which param/v0.awk)"
# PARAM_AWK_PATH=./v0.awk
PARAM_DEFAULT_VAR_PREFIX=___X_CMD_X_BASH_PARAM_DEFAULT___

_param_main(){
    local IFS
    IFS="$(printf "\005")"  # ARG_SEP in awk script
    {
        printf "%s${DICT_SEP}" "$*"
        local first=
        while read -r line; do
            if [ -n "$first" ]; then
                echo "$line"
                continue
            fi
            if ! first="$(echo "$line" | awk '{ if ($1 == "default") { printf("%s", $2); exit 0; } else { exit 1; } }' - )"; then    
                first="."
                echo "$line"
            fi
        done
        if [ -n "$first" ] && [ ! "$first" = "." ]; then
            printf "%s" "${DICT_SEP}"
            O="${PARAM_DEFAULT_VAR_PREFIX}$first" dict_dump
        fi
    } | awk -v ARG_SEP="$IFS" -v RS="${DICT_SEP}" -f "$PARAM_AWK_PATH" -
}

param_default(){
    local op="$1";  shift

    local v1="${1:?Please provide <key> [...key] <val> name in function 'param_default put/set'}"; shift
    while [ $# -ge 2 ]; do
        tmp="${tmp}___$i"; shift;
    done
    local v2="$2"
    

    local i
    local tmp
    case "$op" in   # yml seemed to be a better way to serialize
        load)       
            local O="${PARAM_DEFAULT_VAR_PREFIX}${1:?Provide Object}" 
            dict_load_json ;;
        dump)       
            local O="${PARAM_DEFAULT_VAR_PREFIX}${1:?Provide Object}"
            dict_dump_json ;;
        clear)
            local O="${PARAM_DEFAULT_VAR_PREFIX}${1:?Provide Object}"
            eval "$O="  ;;
        get)
            tmp="${1:?Please provide <key> [...key] name in function 'param_default get'}"; shift
            for i in "$@"; do
                tmp="${tmp}___$i";
            done
            dict_get "$tmp" ;;
        put|set)
            if [ "$#" -lt 2 ]; then
                echo "Please provide <key> [...key] <val> name in function 'param_default put/set'"
                return 1
            fi
            tmp="${1:?Please provide <key> [...key] <val> name in function 'param_default put/set'}"; shift
            while [ $# -ge 2 ]; do
                tmp="${tmp}___$i"; shift;
            done
            dict_put "$tmp" "$1" ;;
        export)
            local O="${PARAM_DEFAULT_VAR_PREFIX}${1:?Provide Object}"
            export "${O?}" ;;
        *)          cat >&2 <<A
param_default     param default function

Subcommand:
        load        load the param default from /dev/stdin in json form
        dump        dump the param default to /dev/stdout in json form
        clear       unset the default param
        get         Upgrade xrc from 'https://get.x-cmd.com/script'
        put,set     param_default put <key> <value>
        export      export the default param variable
A
        ;;
    esac
}

alias param_example='local PARAM_EXAMPLE 2>/dev/null; _param_example PARAM_EXAMPLE'

param_example_show(){
    # shellcheck disable=SC2154
    echo "$PARAM_EXAMPLE"
}

_param_example(){
    local name=$1 
    local s
    shift
    # shellcheck disable=SC2034
    s="$(_param_example_cat "$@")"
    eval "$name=\"\$s\""
}

_param_example_cat(){
    local i
    echo "----------------"
    printf "Example:\n"
    for (( i=1; i<${#@}; i++ )); do
        printf "  $(tput setaf 6)%s:$(tput init)\n" "* ${!i}"
        (( i++ ))
        printf "    > $(tput setaf 2)%s$(tput init)\n" "${!i}"
    done
}

